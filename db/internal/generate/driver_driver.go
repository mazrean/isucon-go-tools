// Code generated by internal/tools/interface-wrapper.go; DO NOT EDIT.
package isudbgen

import "database/sql/driver"

type LimitOptionalDriverWrappedType = interface {
	driver.Driver
	driver.DriverContext
}

func LimitOptionalDriver(v driver.Driver, wrapper func(driver.Driver) LimitOptionalDriverWrappedType) driver.Driver {
	wrapped := wrapper(v)
	var i uint64
	const i0 = 1 << iota
	if _, ok := v.(driver.DriverContext); ok {
		i |= i0
	}
	switch i {
	case 0:
		return struct {
			driver.Driver
		}{wrapped}
	case 1:
		return struct {
			driver.Driver
			driver.DriverContext
		}{wrapped, wrapped}
	}
	return v
}
